		Basic Firmware on Realview-PB-A8 Guest

The basic firmware currently sets up PIC, Timer, and UART and emulates
a dummy terminal which reponds to various commands. It also includes an
extensive MMU test suite and dhrystone benchmark.

Hardware features tested by Basic firmware:
  - Sensitive non-priviledged instructions
  - Virtual IRQs
  - Generic Interrupt Controller (GIC)
  - PrimeCell Dual-Mode Timer (SP804)
  - Serial Port (PL011)  

Please follow the steps below to build & run Basic firmware on Realview-PB-A8
Guest with Xvisor running on QEMU Realview-PB-A8 Host:

  [1. Build environment for Xvisor]
  # CROSS_COMPILE=arm-none-linux-gnueabi-

  [2. GoTo Xvisor source directory]
  # cd <xvisor_source_directory>

  [3. Configure Xvisor with Realview-PB-A8 default settings]
  # make ARCH=arm realview-pb-a8-defconfig 

  [4. Build Xvisor]
  # make

  [5. Build Basic Firmware]
  # make -C tests/arm32/realview-pb-a8/basic

  [6. Create qemu.img for running it on QEMU]
  # ./tools/scripts/memimg.py -a 0x70010000 -o build/qemu.img build/vmm.bin@0x70010000 build/tests/arm32/realview-pb-a8/basic/firmware.bin.patched@0x71000000

  [7. Launch QEMU 0.14.xx or higher]
  # qemu-system-arm -M realview-pb-a8 -display none -serial stdio -kernel build/qemu.img

  [8. Kick Guest0 for starting Basic Firmware]
  XVisor# guest kick guest0

  [9. Bind to virtual UART]
  XVisor# vserial bind guest0/uart0

  [10. Say 'hi' to Basic Firmware Code]
  [guest0/uart0] basic# hi

  [11. Say 'hello' to Basic Firmware Code]
  [guest0/uart0] basic# hello

  [12. Check various commands of Basic Firmware Code]
  [guest0/uart0] basic# help

  [13. Enter character seqence 'ESCAPE+x+q" return to Xvisor prompt]
  [guest0/uart0] basic# 

  (Note: replace all <> brackets based on your workspace)
  (Note: the above steps assumes Xvisor running on Realview-PB-A8 host emulated
   by QEMU 0.14.xx or higher. For other types of ARM host some of the above 
   steps will need to be adapted for that specfic ARM host. For more info on 
   your desired ARM host refer docs/arm/)

